/**
 * Simple sitemap generator for a static site.
 * - Scans repo for .html files.
 * - Maps index.html to "/" (root or folder root).
 * - Requires env BASE_URL (e.g., https://mazerswe.github.io/<repo>).
 *   If missing, falls back to "https://example.com" and prints a warning.
 */
const fs = require('fs');
const path = require('path');

const ROOT = process.cwd();
const BASE_URL = (process.env.BASE_URL || '').replace(/\/+$/, '') || 'https://example.com';

if (BASE_URL === 'https://example.com') {
  console.warn('WARNING: BASE_URL is not set. Set repository variable PAGES_BASE_URL to your Pages URL!');
}

const IGNORE_DIRS = new Set(['.git', 'node_modules', '.github']);
const FILES = [];

function walk(dir) {
  const items = fs.readdirSync(dir, { withFileTypes: true });
  for (const it of items) {
    if (it.name.startsWith('.')) {
      // keep .nojekyll, ignore other dotfiles in listing
      if (it.name !== '.nojekyll') continue;
    }
    const full = path.join(dir, it.name);
    const rel = path.relative(ROOT, full);

    if (it.isDirectory()) {
      const top = rel.split(path.sep)[0];
      if (IGNORE_DIRS.has(top)) continue;
      walk(full);
    } else if (it.isFile()) {
      if (rel.endsWith('.html')) FILES.push(rel);
    }
  }
}

walk(ROOT);

// Build URL list
function toUrl(relPath) {
  // Normalize path separators
  const unix = relPath.split(path.sep).join('/');

  // Map "index.html" to folder root
  if (unix === 'index.html') return `${BASE_URL}/`;
  if (unix.endsWith('/index.html')) {
    return `${BASE_URL}/${unix.replace(/\\/g, '/').replace(/\/index\.html$/, '/')}`;
  }
  return `${BASE_URL}/${unix}`;
}

// Build <urlset>
const urls = FILES.map((rel) => {
  const url = toUrl(rel);
  let lastmod = new Date().toISOString();

  try {
    const stat = fs.statSync(path.join(ROOT, rel));
    lastmod = stat.mtime.toISOString();
  } catch {
    // ignore
  }

  return `  <url>
    <loc>${url}</loc>
    <lastmod>${lastmod}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>${url.endsWith('/') ? '1.0' : '0.7'}</priority>
  </url>`;
});

const xml = `<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by scripts/generate-sitemap.js -->
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${urls.join('\n')}
</urlset>
`;

fs.writeFileSync(path.join(ROOT, 'sitemap.xml'), xml, 'utf8');
console.log(`Sitemap generated with ${urls.length} URLs using BASE_URL=${BASE_URL}`);
